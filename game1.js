document.addEventListener("DOMContentLoaded", function () {
    let currentRound = localStorage.getItem("currentRound") || "round1";

    if (currentRound === "round2") {
        startRound2(); // –ï–≥–µ—Ä 2-—Ä–∞—É–Ω–¥ –±–∞—Å—Ç–∞–ª—Å–∞, –æ–Ω—ã“£ —Å“±—Ä–∞“õ—Ç–∞—Ä—ã–Ω –∂“Ø–∫—Ç–µ—É
    } else {
        startRound1(); // –ë—ñ—Ä—ñ–Ω—à—ñ —Ä–∞—É–Ω–¥—Ç—ã –±–∞—Å—Ç–∞—É
    }
});

function startRound1() {
    const questionsRound1 = [
        { question: "1902 –∂—ã–ª—ã Ullman –∞–ª“ì–∞—à —Ä–µ—Ç –∞–¥–∞–º–Ω—ã“£ –±“Ø–π—Ä–µ–≥—ñ–Ω —Ç—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ü–∏—è–ª–∞–¥—ã.", correct: false },
        { question: "–¢—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ü–∏—è–Ω—ã“£ —Å”ô—Ç—Ç—ñ–ª—ñ–≥—ñ –¥–æ–Ω–æ—Ä –º–µ–Ω —Ä–µ—Ü–∏–ø–∏–µ–Ω—Ç—Ç—ñ“£ –∏–º–º—É–Ω–æ–ª–æ–≥–∏—è–ª—ã“õ —Å”ô–π–∫–µ—Å—Ç—ñ–≥—ñ–Ω–µ –±–∞–π–ª–∞–Ω—ã—Å—Ç—ã.", correct: true },
        { question: "–ö—Å–µ–Ω–æ—Ç—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ü–∏—è ‚Äì –±—ñ—Ä —Ç“Ø—Ä–≥–µ –∂–∞—Ç–∞—Ç—ã–Ω, –±—ñ—Ä–∞“õ –≥–µ–Ω–µ—Ç–∏–∫–∞–ª—ã“õ ”ô—Ä—Ç“Ø—Ä–ª—ñ –µ–∫—ñ –∞–¥–∞–º –∞—Ä–∞—Å—ã–Ω–¥–∞ –º“Ø—à–µ–ª–µ—Ä–¥—ñ –∞–ª–º–∞—Å—Ç—ã—Ä—É.", correct: false },
        { question: "HLA-–∞–Ω—Ç–∏–≥–µ–Ω–¥–µ—Ä—ñ —Ç—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ü–∏—è–Ω—ã“£ “õ–∞–±—ã–ª–¥–∞–Ω—É—ã–Ω–∞ —Ç—ñ–∫–µ–ª–µ–π ”ô—Å–µ—Ä –µ—Ç–µ–¥—ñ.", correct: true },
        { question: "–ñ–µ–¥–µ–ª “õ–∞–±—ã–ª–¥–∞–º–∞—É —Ç—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ü–∏—è–¥–∞–Ω –∫–µ–π—ñ–Ω –±—ñ—Ä–Ω–µ—à–µ –∂—ã–ª ”©—Ç–∫–µ–Ω–¥–µ –¥–∞–º–∏–¥—ã.", correct: false }
    ];

    loadQuestions(questionsRound1);
}

function startRound2() {
    const questionsRound2 = [
        { question: "–ê—É—Ç–æ—Ç—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ü–∏—è –¥–µ–≥–µ–Ω—ñ–º—ñ–∑ –Ω–µ?", options: ["”®–∑ —Ç—ñ–Ω—ñ–Ω –±–∞—Å“õ–∞ –±”©–ª—ñ–∫–∫–µ –∞—É—ã—Å—Ç—ã—Ä—É", "–ë–∞—Å“õ–∞ –∞–¥–∞–º–Ω–∞–Ω –º“Ø—à–µ–Ω—ñ –∞–ª—É", "–ñ–∞–Ω—É–∞—Ä–¥–∞–Ω –∞–¥–∞–º“ì–∞ —Ç—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ü–∏—è–ª–∞—É"], correct: 0 },
        { question: "–ê–ª–ª–æ—Ç—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ü–∏—è –¥–µ–≥–µ–Ω—ñ–º—ñ–∑ –Ω–µ?", options: ["”®–∑ —Ç—ñ–Ω—ñ–Ω –±–∞—Å“õ–∞ –±”©–ª—ñ–∫–∫–µ –∞—É—ã—Å—Ç—ã—Ä—É", "–ë–∞—Å“õ–∞ –∞–¥–∞–º–Ω–∞–Ω –º“Ø—à–µ–Ω—ñ –∞–ª—É", "–ñ–∞–Ω—É–∞—Ä–¥–∞–Ω –∞–¥–∞–º“ì–∞ —Ç—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ü–∏—è–ª–∞—É"], correct: 1 },
        { question: "–ö—Å–µ–Ω–æ—Ç—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ü–∏—è –¥–µ–≥–µ–Ω—ñ–º—ñ–∑ –Ω–µ?", options: ["”®–∑ —Ç—ñ–Ω—ñ–Ω –±–∞—Å“õ–∞ –±”©–ª—ñ–∫–∫–µ –∞—É—ã—Å—Ç—ã—Ä—É", "–ë–∞—Å“õ–∞ –∞–¥–∞–º–Ω–∞–Ω –º“Ø—à–µ–Ω—ñ –∞–ª—É", "–ñ–∞–Ω—É–∞—Ä–¥–∞–Ω –∞–¥–∞–º“ì–∞ —Ç—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ü–∏—è–ª–∞—É"], correct: 2 }
    ];

    loadQuestions(questionsRound2);
}

function loadQuestions(questions) {
    let currentQuestionIndex = 0;
    let correctAnswers = 0;
    let gameOver = false;

    const questionText = document.getElementById("question-text");
    const trueButton = document.getElementById("true-btn");
    const falseButton = document.getElementById("false-btn");
    const resultText = document.getElementById("result-text");

    function loadQuestion() {
        if (currentQuestionIndex < questions.length) {
            let question = questions[currentQuestionIndex];

            if (question.options) {
                // –ö”©–ø –Ω“±—Å“õ–∞–ª—ã —Å“±—Ä–∞“õ—Ç–∞—Ä (2-—Ä–∞—É–Ω–¥)
                questionText.innerHTML = `
                    <p>${question.question}</p>
                    ${question.options.map((opt, index) => 
                        `<button class="btn option-btn" data-index="${index}">${opt}</button>`
                    ).join("")}
                `;

                document.querySelectorAll(".option-btn").forEach(btn => {
                    btn.addEventListener("click", function () {
                        checkAnswer(parseInt(this.dataset.index));
                    });
                });

                trueButton.style.display = "none";
                falseButton.style.display = "none";
            } else {
                // True/False —Å“±—Ä–∞“õ—Ç–∞—Ä (1-—Ä–∞—É–Ω–¥)
                questionText.textContent = question.question;
                trueButton.style.display = "inline-block";
                falseButton.style.display = "inline-block";
            }

            resultText.textContent = "";
        } else {
            checkResult();
        }
    }

    function checkAnswer(userAnswer) {
        let question = questions[currentQuestionIndex];

        if (gameOver) return;

        if ((question.options && userAnswer === question.correct) || 
            (!question.options && userAnswer === question.correct)) {
            correctAnswers++;
        }

        currentQuestionIndex++;

        if (currentQuestionIndex < questions.length) {
            loadQuestion();
        } else {
            checkResult();
        }
    }

    function checkResult() {
        let currentRound = localStorage.getItem("currentRound");

        if (correctAnswers >= 2) {
            resultText.textContent = `üî• “ö“±—Ç—Ç—ã“õ—Ç–∞–π–º—ã–∑! –°—ñ–∑ ${correctAnswers}/${questions.length} –¥“±—Ä—ã—Å –∂–∞—É–∞–ø –±–µ—Ä–¥—ñ“£—ñ–∑!`;

            if (currentRound === "round1") {
                localStorage.setItem("currentRound", "round2");
                setTimeout(() => window.location.reload(), 3000);
            } else {
                resultText.textContent += " üèÜ –°—ñ–∑ –æ–π—ã–Ω–¥—ã –∂–µ“£—ñ–ø –∞–ª–¥—ã“£—ã–∑!";
            }
        } else {
            resultText.textContent = `‚ùå –°—ñ–∑ —Ç–µ–∫ ${correctAnswers}/${questions.length} –¥“±—Ä—ã—Å –∂–∞—É–∞–ø –±–µ—Ä–¥—ñ“£—ñ–∑. –û–π—ã–Ω–Ω–∞–Ω —à—ã“ì–∞—Ä—ã–ª–¥—ã“£—ã–∑.`;
        }

        trueButton.style.display = "none";
        falseButton.style.display = "none";
        gameOver = true;
    }

    trueButton.addEventListener("click", () => checkAnswer(true));
    falseButton.addEventListener("click", () => checkAnswer(false));

    loadQuestion();
}
